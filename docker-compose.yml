version: '3.8'
services:
  flask:
    build:
      context: app
      dockerfile: Dockerfile
    container_name: flask
    restart: unless-stopped
    volumes:
      - appdata:/var/www
    ports:
      - 5000:5000
    depends_on:
      - mongodb
      - db
    

  mongodb:
    image: mongo
    restart: unless-stopped
    container_name: mongodb

    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db

  db:
    image: postgres
    restart: unless-stopped
    container_name: db
    build:
      context: db
      dockerfile: Dockerfile
    environment:
      POSTGRES_PASSWORD: test
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis
    volumes:
      - redis-data:/data

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local
  pgdata:
    driver: local
  redis-data:
    driver: local

